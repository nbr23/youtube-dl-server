name: Update Docker Images

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "archive/**"
      - "README.md"
      - "old/**"
      - "*.pdf"
      - "logs/**"
      - ".fdk/**"
      - "*.md"
      - "*ignore"
      - "*.log"
      - "*.zip"
      - ".vscode/**"
      - "*.vs/**"
      - "test/**"
      - "*.ps1"
      - ".venv/**"
      - "offboarding/**"
      - ".gitignore"
      - ".gitattributes"
      - "getTicketDetails.py"
      - ".env"
      - "1"
      - "processOffboard.py"
      - "Logs/**"
      - "Scripts/**"
      - "Archive/**"
      - "node.js.yml"
      - ".idea/**"
      - "README.md"
      - ".github/workflows/node.js.yml"
      - ".github/workflows/update-python.yml"
      - ".github/workflows/dependabot-merge.yml"
      - ".github/workflows/dependabot-automerge.yml"
      - ".github/dependabot.yml"
      - ".github/workflows/dependabot.yml"

  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      # - name: Prettify code
      #   uses: creyD/prettier_action@v4.3
      #   with:
      #     # This part is also where you can pass other options, for example:
      #     prettier_options: --write **/*.{js,md}
      #     dry: false

      # Set up Python environment
      - name: Setup Python
        uses: actions/setup-python@v5.4.0 # Latest version of setup-python action
        with:
          python-version: "3.x"

      # Cache pip dependencies
      - name: Create virtualenv directory
        run: mkdir -p ~/.local/share/virtualenvs

      - name: Cache pip dependencies
        uses: actions/cache@v4.2.0
        id: pip-cache
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml', '**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install pip and requirements before caching
      - name: Install pip requirements
        run: |
          python -m pip install --upgrade pip
          python -m venv ~/.local/share/virtualenvs/venv
          source ~/.local/share/virtualenvs/venv/bin/activate
          pip install -r requirements.txt || echo "No requirements.txt found"

      # Python Black
      - name: Run Python Black
        uses: piotrpawlaczek/python-blacken@v24.4.2
        with:
          line-length: "88"
          path: "."
          sanity-check: "safe"
          only-check: "no"
      # # Install Black and run it
      # - name: Install Black
      #   run: pip install black

      # - name: Run Black
      #   run: python -m black .

      # Continue with existing steps
      - name: Set date as env variable
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v4.2.0
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Single login step using docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_PAT }}

      # Add step to sanitize branch name
      - name: Sanitize Branch Name
        id: sanitize
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            echo "TAG=latest" >> $GITHUB_ENV
          else
            SANITIZED_TAG=${GITHUB_REF_NAME//\//-}
            echo "TAG=${SANITIZED_TAG}" >> $GITHUB_ENV
          fi

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ secrets.GH_USERNAME }}/${{ github.event.repository.name }}:${{ env.TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          provenance: false
          platforms: linux/amd64

      # Temp fix for https://github.com/docker/build-push-action/issues/252
      # This ugly bit is necessary if you don't want your cache to grow forever
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
